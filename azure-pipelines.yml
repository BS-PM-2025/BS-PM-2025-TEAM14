trigger:
  branches:
    include:
      - main
      - develop

pool:
  vmImage: "ubuntu-latest"

variables:
  pythonVersion: "3.11"
  nodeVersion: "20.x"
  CI: "true"
  DISABLE_ESLINT_PLUGIN: "true" # Temporarily disable ESLint plugin
  SKIP_PREFLIGHT_CHECK: "true" # Skip preflight checks

stages:
  - stage: Build
    displayName: "Build • Test • Report"
    jobs:
      - job: BuildAndTest
        displayName: "Build And Test Application"
        steps:
          # Frontend Build
          - task: NodeTool@0
            displayName: "Install Node.js"
            inputs:
              versionSpec: "$(nodeVersion)"

          - script: |
              cd frontend
              npm install --legacy-peer-deps
              npm install react-scripts --save-dev
              npm run build
            displayName: "Build Frontend"
            timeoutInMinutes: 10
            env:
              CI: "false" # Prevent treating warnings as errors
              NODE_ENV: "test"

          # Backend Build and Test
          - task: UsePythonVersion@0
            displayName: "Use Python $(pythonVersion)"
            inputs:
              versionSpec: "$(pythonVersion)"
              addToPath: true

          - script: |
              python -m pip install --upgrade pip
              cd backend
              pip install -r requirements.txt
              pytest \
                    --json-report --json-report-file=pytest-report.json \
                    --junitxml=pytest-report.xml
            displayName: "Run back-end unit tests"

          - bash: |
              total=$(python -c "import json, pathlib, sys; p=pathlib.Path('backend/pytest-report.json'); print(json.loads(p.read_text())['summary']['collected'] if p.exists() else 0)")
              echo \"##vso[task.setvariable variable=UNIT_TEST_COUNT]$total\"
              echo \"TOTAL UNIT TESTS: $total\"
            displayName: "Aggregate test count"

          - publish: backend/pytest-report.json
            artifact: test-metrics
            displayName: "Publish pytest JSON Report"

          - task: PublishTestResults@2
            displayName: "Publish pytest XML results"
            inputs:
              testResultsFormat: JUnit
              testResultsFiles: backend/pytest-report.xml
              mergeTestResults: true